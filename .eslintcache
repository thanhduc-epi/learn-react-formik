[{"C:\\MyProjects\\Github\\learn-react-formik\\src\\index.js":"1","C:\\MyProjects\\Github\\learn-react-formik\\src\\components\\YoutubeForm.js":"2","C:\\MyProjects\\Github\\learn-react-formik\\src\\App.js":"3","C:\\MyProjects\\Github\\learn-react-formik\\src\\components\\OldYoutubeForm.js":"4","C:\\MyProjects\\Github\\learn-react-formik\\src\\reportWebVitals.js":"5"},{"size":500,"mtime":1606212249215,"results":"6","hashOfConfig":"7"},{"size":2561,"mtime":1606297846537,"results":"8","hashOfConfig":"7"},{"size":206,"mtime":1606293630610,"results":"9","hashOfConfig":"7"},{"size":3237,"mtime":1606293542479,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1606212249215,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sdqjyz",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MyProjects\\Github\\learn-react-formik\\src\\index.js",[],"C:\\MyProjects\\Github\\learn-react-formik\\src\\components\\YoutubeForm.js",["23"],"C:\\MyProjects\\Github\\learn-react-formik\\src\\App.js",[],"C:\\MyProjects\\Github\\learn-react-formik\\src\\components\\OldYoutubeForm.js",["24"],"import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst initialValues = {\r\n    name: \"\",\r\n    email: \"\",\r\n    channel: \"\",\r\n};\r\n\r\nconst onSubmit = (values) => {\r\n    console.log(\"Form data\", values);\r\n};\r\n\r\nconst validate = (values) => {\r\n    let errors = {};\r\n\r\n    if (!values.name) {\r\n        errors.name = \"Required\";\r\n    }\r\n    if (!values.email) {\r\n        errors.email = \"Required\";\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = \"Invalid email format\";\r\n    }\r\n    if (!values.channel) {\r\n        errors.channel = \"Required\";\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nconst validationSchema = Yup.object({\r\n    name: Yup.string().required(\"Required\"),\r\n    email: Yup.string().required(\"Required\").email(\"Invalid email format\"),\r\n    channel: Yup.string().required(\"Required\"),\r\n});\r\n\r\nconst OldYoutubeForm = () => {\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        // validate,\r\n        validationSchema,\r\n    });\r\n\r\n    console.log(\"Formik errors\", formik.errors);\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        name=\"name\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.name}\r\n                    />\r\n                    {formik.touched.name && formik.errors.name ? (\r\n                        <div className=\"error\">{formik.errors.name}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"email\">E-mail</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.email}\r\n                    />\r\n                    {formik.touched.email && formik.errors.email ? (\r\n                        <div className=\"error\">{formik.errors.email}</div>\r\n                    ) : null}\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"channel\">Channel</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"channel\"\r\n                        name=\"channel\"\r\n                        onChange={formik.handleChange}\r\n                        onBlur={formik.handleBlur}\r\n                        value={formik.values.channel}\r\n                    />\r\n                    {formik.touched.channel && formik.errors.channel ? (\r\n                        <div className=\"error\">{formik.errors.channel}</div>\r\n                    ) : null}\r\n                </div>\r\n\r\n                <button type=\"submit\">Submit</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OldYoutubeForm;\r\n","C:\\MyProjects\\Github\\learn-react-formik\\src\\reportWebVitals.js",[],{"ruleId":"25","severity":1,"message":"26","line":50,"column":44,"nodeType":"27","messageId":"28","endLine":50,"endColumn":48},{"ruleId":"25","severity":1,"message":"29","line":15,"column":7,"nodeType":"27","messageId":"28","endLine":15,"endColumn":15},"no-unused-vars","'form' is assigned a value but never used.","Identifier","unusedVar","'validate' is assigned a value but never used."]